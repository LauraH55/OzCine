security:

    # Les encodeurs disponibles pour les types d'utilisateurs du système
    encoders: 
        # plaintext = en clair / auto = prend le meilleur disponible sur le système
        # en 2021 soit bcrypt soit argon2
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # Endroits où peuvent se trouver nos utilisateurs
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                # Propriété de connexion 
                property: email
    # Les firewalls sont un ensemble de règles de sécurité
    # qui régissent le fonctionnement de la sécurité de notre appli
    firewalls:
        # Le firewall de "dev"
        # permet de désactiver la sécurité les URLs du Profiler
        # et de la Web Debug Toolbar et des dossiers d'assets
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Notre firewall princpal 
        main:
            # Anonyme autorisé
            anonymous: true
            # Session User démarrée que si on cherche à se connecter
            lazy: true
            # Où sont les utilisateurs ?
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # Déconnexion 
            logout:
                # Soit un chemin (endpoint, /logout), soit un nom de route
                path: app_logout

            # Classe qui nous connecte
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # /admin correspond à mon lien admin du MainController
        # La parenthèse sert à grouper et c'est des / pas des | (ou)

        # Les routes d'ajout, de modification et suppression => Admin
        - { path: ^/admin/(add|edit|delete), roles: ROLE_ADMIN }
        # Pour toutes les autres pages du back => Manager
        - { path: ^/admin, roles: ROLE_MANAGER }
        # Pour ajouter une review, il faut etre connecté en tant qu'user
        - { path: ^/review/add, roles: ROLE_USER }

        # On commence par les chemins les plus profonds, qui nécessite un rôle plus fort


    role_hierarchy:
        # ROLE_ADMIN hérite de ROLE_MANAGER
        # ROLE_MANAGER de ROLE_USER
        # Si pertinent pour le projet
        ROLE_ADMIN: ROLE_MANAGER
        ROLE_MANAGER: ROLE_USER
        # ROLE_ADMIN hérite donc aussi de ROLE_USER
